{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\romfa\\\\Desktop\\\\MakeGood\\\\src\\\\screens\\\\shop\\\\CartScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport CartItem from \"../../components/shop/CartItem\";\nimport Card from \"../../components/UI/Card\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport * as ordersActions from \"../../store/actions/orders\";\n\nvar CartScreen = function CartScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var cartTotalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems.sort(function (a, b) {\n      return a.productId > b.productId ? 1 : -1;\n    });\n  });\n  var dispatch = useDispatch();\n\n  var sendOrderHandler = function sendOrderHandler() {\n    return _regeneratorRuntime.async(function sendOrderHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(ordersActions.addOrder(cartItems, cartTotalAmount)));\n\n          case 3:\n            setIsLoading(false);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    style: styles.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.summaryText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Total:\", ' ', React.createElement(Text, {\n    style: styles.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"$\", Math.round(cartTotalAmount.toFixed(2) * 100) / 100)), isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }) : React.createElement(Button, {\n    color: Colors.accent,\n    title: \"Order Now\",\n    disabled: cartItems.length === 0,\n    onPress: sendOrderHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(FlatList, {\n    data: cartItems,\n    keyExtractor: function keyExtractor(item) {\n      return item.productId;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(CartItem, {\n        quantity: itemData.item.quantity,\n        title: itemData.item.productTitle,\n        amount: itemData.item.sum,\n        deletable: true,\n        onRemove: function onRemove() {\n          dispatch(cartActions.removeFromCart(itemData.item.productId));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: 'Your Cart'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\nexport default CartScreen;","map":{"version":3,"sources":["C:/Users/romfa/Desktop/MakeGood/src/screens/shop/CartScreen.js"],"names":["React","useState","useSelector","useDispatch","Colors","CartItem","Card","cartActions","ordersActions","CartScreen","props","isLoading","setIsLoading","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","quantity","sum","sort","a","b","dispatch","sendOrderHandler","addOrder","styles","screen","summary","summaryText","amount","Math","round","toFixed","primary","accent","length","item","itemData","removeFromCart","navigationOptions","headerTitle","StyleSheet","create","margin","flexDirection","alignItems","justifyContent","marginBottom","padding","fontFamily","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  Button,\n  StyleSheet,\n  ActivityIndicator\n} from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Colors from '../../constants/Colors';\nimport CartItem from '../../components/shop/CartItem';\nimport Card from '../../components/UI/Card';\nimport * as cartActions from '../../store/actions/cart';\nimport * as ordersActions from '../../store/actions/orders';\n\nconst CartScreen = props => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const cartTotalAmount = useSelector(state => state.cart.totalAmount);\n  const cartItems = useSelector(state => {\n    const transformedCartItems = [];\n    for (const key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n    return transformedCartItems.sort((a, b) =>\n      a.productId > b.productId ? 1 : -1\n    );\n  });\n  const dispatch = useDispatch();\n\n  const sendOrderHandler = async () => {\n    setIsLoading(true);\n    await dispatch(ordersActions.addOrder(cartItems, cartTotalAmount));\n    setIsLoading(false);\n  };\n\n  return (\n    <View style={styles.screen}>\n      <Card style={styles.summary}>\n        <Text style={styles.summaryText}>\n          Total:{' '}\n          <Text style={styles.amount}>\n            ${Math.round(cartTotalAmount.toFixed(2) * 100) / 100}\n          </Text>\n        </Text>\n        {isLoading ? (\n          <ActivityIndicator size=\"small\" color={Colors.primary} />\n        ) : (\n          <Button\n            color={Colors.accent}\n            title=\"Order Now\"\n            disabled={cartItems.length === 0}\n            onPress={sendOrderHandler}\n          />\n        )}\n      </Card>\n      <FlatList\n        data={cartItems}\n        keyExtractor={item => item.productId}\n        renderItem={itemData => (\n          <CartItem\n            quantity={itemData.item.quantity}\n            title={itemData.item.productTitle}\n            amount={itemData.item.sum}\n            deletable\n            onRemove={() => {\n              dispatch(cartActions.removeFromCart(itemData.item.productId));\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: 'Your Cart'\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\n\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}
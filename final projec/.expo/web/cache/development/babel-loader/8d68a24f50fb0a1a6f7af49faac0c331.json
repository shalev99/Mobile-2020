{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PRODUCTS from \"../../data/dummy-data\";\nimport { DELETE_PRODUCT, CREATE_PRODUCT, UPDATE_PRODUCT, SET_PRODUCTS } from \"../actions/products\";\nimport Product from \"../../models/product\";\nvar initialState = {\n  availableProducts: [],\n  userProducts: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_PRODUCTS:\n      return {\n        availableProducts: action.products,\n        userProducts: action.userProducts\n      };\n\n    case CREATE_PRODUCT:\n      var newProduct = new Product(action.productData.id, action.productData.ownerId, action.productData.title, action.productData.imageUrl, action.productData.description, action.productData.price);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        availableProducts: state.availableProducts.concat(newProduct),\n        userProducts: state.userProducts.concat(newProduct)\n      });\n\n    case UPDATE_PRODUCT:\n      var productIndex = state.userProducts.findIndex(function (prod) {\n        return prod.id === action.pid;\n      });\n      var updatedProduct = new Product(action.pid, state.userProducts[productIndex].ownerId, action.productData.title, action.productData.imageUrl, action.productData.description, state.userProducts[productIndex].price);\n\n      var updatedUserProducts = _toConsumableArray(state.userProducts);\n\n      updatedUserProducts[productIndex] = updatedProduct;\n      var availableProductIndex = state.availableProducts.findIndex(function (prod) {\n        return prod.id === action.pid;\n      });\n\n      var updatedAvailableProducts = _toConsumableArray(state.availableProducts);\n\n      updatedAvailableProducts[availableProductIndex] = updatedProduct;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        availableProducts: updatedAvailableProducts,\n        userProducts: updatedUserProducts\n      });\n\n    case DELETE_PRODUCT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userProducts: state.userProducts.filter(function (product) {\n          return product.id !== action.pid;\n        }),\n        availableProducts: state.availableProducts.filter(function (product) {\n          return product.id !== action.pid;\n        })\n      });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/romfa/Desktop/MakeGood/src/store/reducers/products.js"],"names":["PRODUCTS","DELETE_PRODUCT","CREATE_PRODUCT","UPDATE_PRODUCT","SET_PRODUCTS","Product","initialState","availableProducts","userProducts","state","action","type","products","newProduct","productData","id","ownerId","title","imageUrl","description","price","concat","productIndex","findIndex","prod","pid","updatedProduct","updatedUserProducts","availableProductIndex","updatedAvailableProducts","filter","product"],"mappings":";;;;;;;AAAA,OAAOA,QAAP;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,YAJF;AAMA,OAAOC,OAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,iBAAiB,EAAE,EADA;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,YAAL;AACE,aAAO;AACLG,QAAAA,iBAAiB,EAAEG,MAAM,CAACE,QADrB;AAELJ,QAAAA,YAAY,EAAEE,MAAM,CAACF;AAFhB,OAAP;;AAIF,SAAKN,cAAL;AACE,UAAMW,UAAU,GAAG,IAAIR,OAAJ,CACjBK,MAAM,CAACI,WAAP,CAAmBC,EADF,EAEjBL,MAAM,CAACI,WAAP,CAAmBE,OAFF,EAGjBN,MAAM,CAACI,WAAP,CAAmBG,KAHF,EAIjBP,MAAM,CAACI,WAAP,CAAmBI,QAJF,EAKjBR,MAAM,CAACI,WAAP,CAAmBK,WALF,EAMjBT,MAAM,CAACI,WAAP,CAAmBM,KANF,CAAnB;AAQA,6CACKX,KADL;AAEEF,QAAAA,iBAAiB,EAAEE,KAAK,CAACF,iBAAN,CAAwBc,MAAxB,CAA+BR,UAA/B,CAFrB;AAGEL,QAAAA,YAAY,EAAEC,KAAK,CAACD,YAAN,CAAmBa,MAAnB,CAA0BR,UAA1B;AAHhB;;AAKF,SAAKV,cAAL;AACE,UAAMmB,YAAY,GAAGb,KAAK,CAACD,YAAN,CAAmBe,SAAnB,CACnB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACT,EAAL,KAAYL,MAAM,CAACe,GAAvB;AAAA,OADe,CAArB;AAGA,UAAMC,cAAc,GAAG,IAAIrB,OAAJ,CACrBK,MAAM,CAACe,GADc,EAErBhB,KAAK,CAACD,YAAN,CAAmBc,YAAnB,EAAiCN,OAFZ,EAGrBN,MAAM,CAACI,WAAP,CAAmBG,KAHE,EAIrBP,MAAM,CAACI,WAAP,CAAmBI,QAJE,EAKrBR,MAAM,CAACI,WAAP,CAAmBK,WALE,EAMrBV,KAAK,CAACD,YAAN,CAAmBc,YAAnB,EAAiCF,KANZ,CAAvB;;AAQA,UAAMO,mBAAmB,sBAAOlB,KAAK,CAACD,YAAb,CAAzB;;AACAmB,MAAAA,mBAAmB,CAACL,YAAD,CAAnB,GAAoCI,cAApC;AACA,UAAME,qBAAqB,GAAGnB,KAAK,CAACF,iBAAN,CAAwBgB,SAAxB,CAC5B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACT,EAAL,KAAYL,MAAM,CAACe,GAAvB;AAAA,OADwB,CAA9B;;AAGA,UAAMI,wBAAwB,sBAAOpB,KAAK,CAACF,iBAAb,CAA9B;;AACAsB,MAAAA,wBAAwB,CAACD,qBAAD,CAAxB,GAAkDF,cAAlD;AACA,6CACKjB,KADL;AAEEF,QAAAA,iBAAiB,EAAEsB,wBAFrB;AAGErB,QAAAA,YAAY,EAAEmB;AAHhB;;AAKF,SAAK1B,cAAL;AACE,6CACKQ,KADL;AAEED,QAAAA,YAAY,EAAEC,KAAK,CAACD,YAAN,CAAmBsB,MAAnB,CACZ,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAAChB,EAAR,KAAeL,MAAM,CAACe,GAA1B;AAAA,SADK,CAFhB;AAKElB,QAAAA,iBAAiB,EAAEE,KAAK,CAACF,iBAAN,CAAwBuB,MAAxB,CACjB,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAAChB,EAAR,KAAeL,MAAM,CAACe,GAA1B;AAAA,SADU;AALrB;AA7CJ;;AAuDA,SAAOhB,KAAP;AACD,CAzDD","sourcesContent":["import PRODUCTS from '../../data/dummy-data';\nimport {\n  DELETE_PRODUCT,\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  SET_PRODUCTS\n} from '../actions/products';\nimport Product from '../../models/product';\n\nconst initialState = {\n  availableProducts: [],\n  userProducts: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PRODUCTS:\n      return {\n        availableProducts: action.products,\n        userProducts: action.userProducts\n      };\n    case CREATE_PRODUCT:\n      const newProduct = new Product(\n        action.productData.id,\n        action.productData.ownerId,\n        action.productData.title,\n        action.productData.imageUrl,\n        action.productData.description,\n        action.productData.price\n      );\n      return {\n        ...state,\n        availableProducts: state.availableProducts.concat(newProduct),\n        userProducts: state.userProducts.concat(newProduct)\n      };\n    case UPDATE_PRODUCT:\n      const productIndex = state.userProducts.findIndex(\n        prod => prod.id === action.pid\n      );\n      const updatedProduct = new Product(\n        action.pid,\n        state.userProducts[productIndex].ownerId,\n        action.productData.title,\n        action.productData.imageUrl,\n        action.productData.description,\n        state.userProducts[productIndex].price\n      );\n      const updatedUserProducts = [...state.userProducts];\n      updatedUserProducts[productIndex] = updatedProduct;\n      const availableProductIndex = state.availableProducts.findIndex(\n        prod => prod.id === action.pid\n      );\n      const updatedAvailableProducts = [...state.availableProducts];\n      updatedAvailableProducts[availableProductIndex] = updatedProduct;\n      return {\n        ...state,\n        availableProducts: updatedAvailableProducts,\n        userProducts: updatedUserProducts\n      };\n    case DELETE_PRODUCT:\n      return {\n        ...state,\n        userProducts: state.userProducts.filter(\n          product => product.id !== action.pid\n        ),\n        availableProducts: state.availableProducts.filter(\n          product => product.id !== action.pid\n        )\n      };\n  }\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}
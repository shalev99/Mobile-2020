{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Order from \"../../models/order\";\nexport var ADD_ORDER = 'ADD_ORDER';\nexport var SET_ORDERS = 'SET_ORDERS';\nexport var fetchOrders = function fetchOrders() {\n  return function _callee(dispatch, getState) {\n    var userId, response, resData, loadedOrders, key;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = getState().auth.userId;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://theshopapp-64e1e.firebaseio.com/orders/\" + userId + \".json\"));\n\n          case 4:\n            response = _context.sent;\n            console.log();\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error('Something went wrong!');\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            resData = _context.sent;\n            loadedOrders = [];\n\n            for (key in resData) {\n              loadedOrders.push(new Order(key, resData[key].cartItems, resData[key].totalAmount, new Date(resData[key].date)));\n            }\n\n            dispatch({\n              type: SET_ORDERS,\n              orders: loadedOrders\n            });\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 16]], Promise);\n  };\n};\nexport var addOrder = function addOrder(cartItems, totalAmount) {\n  return function _callee2(dispatch, getState) {\n    var token, userId, date, response, resData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = getState().auth.token;\n            userId = getState().auth.userId;\n            date = new Date();\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(\"https://theshopapp-64e1e.firebaseio.com/orders/\" + userId + \".json?auth=\" + token, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                cartItems: cartItems,\n                totalAmount: totalAmount,\n                date: date.toISOString()\n              })\n            }));\n\n          case 5:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error('Something went wrong!');\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            resData = _context2.sent;\n            dispatch({\n              type: ADD_ORDER,\n              orderData: {\n                id: resData.name,\n                items: cartItems,\n                amount: totalAmount,\n                date: date\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/romfa/Desktop/MakeGood/src/store/actions/orders.js"],"names":["Order","ADD_ORDER","SET_ORDERS","fetchOrders","dispatch","getState","userId","auth","fetch","response","console","log","ok","Error","json","resData","loadedOrders","key","push","cartItems","totalAmount","Date","date","type","orders","addOrder","token","method","headers","body","JSON","stringify","toISOString","orderData","id","name","items","amount"],"mappings":";AAAA,OAAOA,KAAP;AAEA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,MADD,GACUD,QAAQ,GAAGE,IAAX,CAAgBD,MAD1B;AAAA;AAAA;AAAA,6CAGoBE,KAAK,qDACwBF,MADxB,WAHzB;;AAAA;AAGGG,YAAAA,QAHH;AAOHC,YAAAA,OAAO,CAACC,GAAR;;AAPG,gBASEF,QAAQ,CAACG,EATX;AAAA;AAAA;AAAA;;AAAA,kBAUK,IAAIC,KAAJ,CAAU,uBAAV,CAVL;;AAAA;AAAA;AAAA,6CAamBJ,QAAQ,CAACK,IAAT,EAbnB;;AAAA;AAaGC,YAAAA,OAbH;AAcGC,YAAAA,YAdH,GAckB,EAdlB;;AAgBH,iBAAWC,GAAX,IAAkBF,OAAlB,EAA2B;AACzBC,cAAAA,YAAY,CAACE,IAAb,CACE,IAAIlB,KAAJ,CACEiB,GADF,EAEEF,OAAO,CAACE,GAAD,CAAP,CAAaE,SAFf,EAGEJ,OAAO,CAACE,GAAD,CAAP,CAAaG,WAHf,EAIE,IAAIC,IAAJ,CAASN,OAAO,CAACE,GAAD,CAAP,CAAaK,IAAtB,CAJF,CADF;AAQD;;AACDlB,YAAAA,QAAQ,CAAC;AAAEmB,cAAAA,IAAI,EAAErB,UAAR;AAAoBsB,cAAAA,MAAM,EAAER;AAA5B,aAAD,CAAR;AA1BG;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA+BD,CAhCM;AAkCP,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACN,SAAD,EAAYC,WAAZ,EAA4B;AAClD,SAAO,kBAAOhB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCqB,YAAAA,KADD,GACSrB,QAAQ,GAAGE,IAAX,CAAgBmB,KADzB;AAECpB,YAAAA,MAFD,GAEUD,QAAQ,GAAGE,IAAX,CAAgBD,MAF1B;AAGCgB,YAAAA,IAHD,GAGQ,IAAID,IAAJ,EAHR;AAAA;AAAA,6CAIkBb,KAAK,qDACwBF,MADxB,mBAC4CoB,KAD5C,EAE1B;AACEC,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFX;AAKEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBZ,gBAAAA,SAAS,EAATA,SADmB;AAEnBC,gBAAAA,WAAW,EAAXA,WAFmB;AAGnBE,gBAAAA,IAAI,EAAEA,IAAI,CAACU,WAAL;AAHa,eAAf;AALR,aAF0B,CAJvB;;AAAA;AAICvB,YAAAA,QAJD;;AAAA,gBAmBAA,QAAQ,CAACG,EAnBT;AAAA;AAAA;AAAA;;AAAA,kBAoBG,IAAIC,KAAJ,CAAU,uBAAV,CApBH;;AAAA;AAAA;AAAA,6CAuBiBJ,QAAQ,CAACK,IAAT,EAvBjB;;AAAA;AAuBCC,YAAAA,OAvBD;AAyBLX,YAAAA,QAAQ,CAAC;AACPmB,cAAAA,IAAI,EAAEtB,SADC;AAEPgC,cAAAA,SAAS,EAAE;AACTC,gBAAAA,EAAE,EAAEnB,OAAO,CAACoB,IADH;AAETC,gBAAAA,KAAK,EAAEjB,SAFE;AAGTkB,gBAAAA,MAAM,EAAEjB,WAHC;AAITE,gBAAAA,IAAI,EAAEA;AAJG;AAFJ,aAAD,CAAR;;AAzBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAmCD,CApCM","sourcesContent":["import Order from '../../models/order';\n\nexport const ADD_ORDER = 'ADD_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\n\nexport const fetchOrders = () => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    try {\n      const response = await fetch(\n        `https://theshopapp-64e1e.firebaseio.com/orders/${userId}.json`\n      );\n\n      console.log()\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const resData = await response.json();\n      const loadedOrders = [];\n\n      for (const key in resData) {\n        loadedOrders.push(\n          new Order(\n            key,\n            resData[key].cartItems,\n            resData[key].totalAmount,\n            new Date(resData[key].date)\n          )\n        );\n      }\n      dispatch({ type: SET_ORDERS, orders: loadedOrders });\n    } catch (err) {\n      throw err;\n    }\n  };\n};\n\nexport const addOrder = (cartItems, totalAmount) => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;\n    const userId = getState().auth.userId;\n    const date = new Date();\n    const response = await fetch(\n      `https://theshopapp-64e1e.firebaseio.com/orders/${userId}.json?auth=${token}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cartItems,\n          totalAmount,\n          date: date.toISOString()\n        })\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    const resData = await response.json();\n\n    dispatch({\n      type: ADD_ORDER,\n      orderData: {\n        id: resData.name,\n        items: cartItems,\n        amount: totalAmount,\n        date: date\n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
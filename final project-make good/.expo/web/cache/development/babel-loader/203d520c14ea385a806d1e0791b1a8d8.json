{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Order from \"../../models/order\";\nexport var ADD_ORDER = 'ADD_ORDER';\nexport var SET_ORDERS = 'SET_ORDERS';\nexport var addOrder = function addOrder(orderItems) {\n  return function _callee(dispatch, getState) {\n    var token, userId, date, response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = getState().auth.token;\n            userId = getState().auth.userId;\n            date = new Date();\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(\"https://makegood-728b4.firebaseio.com/orders/\" + userId + \".json?auth=\" + token, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                orderItems: orderItems,\n                date: date.toISOString()\n              })\n            }));\n\n          case 5:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error('משהו השתבש...');\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            resData = _context.sent;\n            dispatch({\n              type: ADD_ORDER,\n              orderData: {\n                id: resData.name,\n                items: orderItems,\n                points: points,\n                date: date\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/romfa/Desktop/‏‏‏‏‏‏MakeGood - heb - 1/src/store/actions/orders.js"],"names":["Order","ADD_ORDER","SET_ORDERS","addOrder","orderItems","dispatch","getState","token","auth","userId","date","Date","fetch","method","headers","body","JSON","stringify","toISOString","response","ok","Error","json","resData","type","orderData","id","name","items","points"],"mappings":";AAAA,OAAOA,KAAP;AAEA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AAiCP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAgB;AACtC,SAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,KADD,GACSD,QAAQ,GAAGE,IAAX,CAAgBD,KADzB;AAECE,YAAAA,MAFD,GAEUH,QAAQ,GAAGE,IAAX,CAAgBC,MAF1B;AAGCC,YAAAA,IAHD,GAGQ,IAAIC,IAAJ,EAHR;AAAA;AAAA,6CAIkBC,KAAK,mDACsBH,MADtB,mBAC0CF,KAD1C,EAE1B;AACEM,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFX;AAKEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBb,gBAAAA,UAAU,EAAVA,UADmB;AAEnBM,gBAAAA,IAAI,EAAEA,IAAI,CAACQ,WAAL;AAFa,eAAf;AALR,aAF0B,CAJvB;;AAAA;AAICC,YAAAA,QAJD;;AAAA,gBAkBAA,QAAQ,CAACC,EAlBT;AAAA;AAAA;AAAA;;AAAA,kBAmBG,IAAIC,KAAJ,CAAU,eAAV,CAnBH;;AAAA;AAAA;AAAA,6CAsBiBF,QAAQ,CAACG,IAAT,EAtBjB;;AAAA;AAsBCC,YAAAA,OAtBD;AAwBLlB,YAAAA,QAAQ,CAAC;AACPmB,cAAAA,IAAI,EAAEvB,SADC;AAEPwB,cAAAA,SAAS,EAAE;AACTC,gBAAAA,EAAE,EAAEH,OAAO,CAACI,IADH;AAETC,gBAAAA,KAAK,EAAExB,UAFE;AAGTyB,gBAAAA,MAAM,EAACA,MAHE;AAITnB,gBAAAA,IAAI,EAAEA;AAJG;AAFJ,aAAD,CAAR;;AAxBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAkCD,CAnCM","sourcesContent":["import Order from '../../models/order';\n\nexport const ADD_ORDER = 'ADD_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\n\n// export const fetchOrders = () => {\n//   return async (dispatch, getState) => {\n//     const userId = getState().auth.userId;\n//     try {\n//       const response = await fetch(\n//         `https://makegood-728b4.firebaseio.com/orders/${userId}.json`\n//       );\n      \n//       if (!response.ok) {\n//         throw new Error('משהו השתבש...');\n//       }\n\n//       const resData = await response.json();\n//       const loadedOrders = [];\n\n//       for (const key in resData) {\n//         loadedOrders.push(\n//           new Order(\n//             key,\n//             resData[key].orderItems,\n//             new Date(resData[key].date)\n//           )\n//         );\n//       }\n//       dispatch({ type: SET_ORDERS, orders: loadedOrders });\n//     } catch (err) {\n//       throw err;\n//     }\n//   };\n// };\n\nexport const addOrder = (orderItems) => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;\n    const userId = getState().auth.userId;\n    const date = new Date();\n    const response = await fetch(\n      `https://makegood-728b4.firebaseio.com/orders/${userId}.json?auth=${token}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          orderItems,\n          date: date.toISOString()\n        })\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('משהו השתבש...');\n    }\n\n    const resData = await response.json();\n\n    dispatch({\n      type: ADD_ORDER,\n      orderData: {\n        id: resData.name,\n        items: orderItems,\n        points:points,\n        date: date\n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
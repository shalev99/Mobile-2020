{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\romfa\\\\Desktop\\\\MakeGood\\\\src\\\\navigation\\\\ShopNavigator.js\";\nimport React from 'react';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerNavigatorItems } from 'react-navigation-drawer';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useDispatch } from 'react-redux';\nimport ProductsOverviewScreen from \"../screens/shop/ProductsOverviewScreen\";\nimport ProductDetailScreen from \"../screens/shop/ProductDetailScreen\";\nimport CartScreen from \"../screens/shop/CartScreen\";\nimport OrdersScreen from \"../screens/shop/OrdersScreen\";\nimport UserProductsScreen from \"../screens/user/UserProductsScreen\";\nimport EditProductScreen from \"../screens/user/EditProductScreen\";\nimport AuthScreen from \"../screens/user/AuthScreen\";\nimport StartupScreen from \"../screens/StartupScreen\";\nimport Colors from \"../constants/Colors\";\nimport * as authActions from \"../store/actions/auth\";\nvar defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Colors.primary\n  },\n  headerTitleStyle: {\n    fontFamily: 'open-sans-bold'\n  },\n  headerBackTitleStyle: {\n    fontFamily: 'open-sans'\n  },\n  headerTintColor: Colors.primary\n};\nvar ProductsNavigator = createStackNavigator({\n  ProductsOverview: ProductsOverviewScreen,\n  ProductDetail: ProductDetailScreen,\n  Cart: CartScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return React.createElement(Ionicons, {\n        name: Platform.OS === 'android' ? 'md-cart' : 'ios-cart',\n        size: 23,\n        color: drawerConfig.tintColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar OrdersNavigator = createStackNavigator({\n  Orders: OrdersScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return React.createElement(Ionicons, {\n        name: Platform.OS === 'android' ? 'md-list' : 'ios-list',\n        size: 23,\n        color: drawerConfig.tintColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar AdminNavigator = createStackNavigator({\n  UserProducts: UserProductsScreen,\n  EditProduct: EditProductScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return React.createElement(Ionicons, {\n        name: Platform.OS === 'android' ? 'md-create' : 'ios-create',\n        size: 23,\n        color: drawerConfig.tintColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar ShopNavigator = createDrawerNavigator({\n  Products: ProductsNavigator,\n  Orders: OrdersNavigator,\n  Admin: AdminNavigator\n}, {\n  contentOptions: {\n    activeTintColor: Colors.primary\n  },\n  contentComponent: function contentComponent(props) {\n    var dispatch = useDispatch();\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, React.createElement(SafeAreaView, {\n      forceInset: {\n        top: 'always',\n        horizontal: 'never'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, React.createElement(DrawerNavigatorItems, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    })), React.createElement(Button, {\n      title: \"Logout\",\n      color: Colors.primary,\n      onPress: function onPress() {\n        dispatch(authActions.logout());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    })));\n  }\n});\nvar AuthNavigator = createStackNavigator({\n  Auth: AuthScreen\n}, {\n  defaultNavigationOptions: defaultNavOptions\n});\nvar MainNavigator = createSwitchNavigator({\n  Startup: StartupScreen,\n  Auth: AuthNavigator,\n  Shop: ShopNavigator\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["C:/Users/romfa/Desktop/MakeGood/src/navigation/ShopNavigator.js"],"names":["React","createStackNavigator","createDrawerNavigator","DrawerNavigatorItems","createAppContainer","createSwitchNavigator","Ionicons","useDispatch","ProductsOverviewScreen","ProductDetailScreen","CartScreen","OrdersScreen","UserProductsScreen","EditProductScreen","AuthScreen","StartupScreen","Colors","authActions","defaultNavOptions","headerStyle","backgroundColor","primary","headerTitleStyle","fontFamily","headerBackTitleStyle","headerTintColor","ProductsNavigator","ProductsOverview","ProductDetail","Cart","navigationOptions","drawerIcon","drawerConfig","Platform","OS","tintColor","defaultNavigationOptions","OrdersNavigator","Orders","AdminNavigator","UserProducts","EditProduct","ShopNavigator","Products","Admin","contentOptions","activeTintColor","contentComponent","props","dispatch","flex","paddingTop","top","horizontal","logout","AuthNavigator","Auth","MainNavigator","Startup","Shop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStackNavigator } from 'react-navigation-stack'\nimport { createDrawerNavigator, DrawerNavigatorItems } from 'react-navigation-drawer'\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation'\nimport { Platform, SafeAreaView, Button, View } from 'react-native'\nimport { Ionicons } from '@expo/vector-icons';\nimport { useDispatch } from 'react-redux';\n\nimport ProductsOverviewScreen from '../screens/shop/ProductsOverviewScreen'\nimport ProductDetailScreen from '../screens/shop/ProductDetailScreen';\nimport CartScreen from '../screens/shop/CartScreen';\nimport OrdersScreen from '../screens/shop/OrdersScreen';\nimport UserProductsScreen from '../screens/user/UserProductsScreen';\nimport EditProductScreen from '../screens/user/EditProductScreen';\nimport AuthScreen from '../screens/user/AuthScreen';\nimport StartupScreen from '../screens/StartupScreen';\nimport Colors from '../constants/Colors'\nimport * as authActions from '../store/actions/auth';\n\nconst defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Colors.primary\n  },\n  headerTitleStyle: {\n    fontFamily: 'open-sans-bold'\n  },\n  headerBackTitleStyle: {\n    fontFamily: 'open-sans'\n  },\n  headerTintColor: Colors.primary\n};\n\nconst ProductsNavigator = createStackNavigator(\n  {\n    ProductsOverview: ProductsOverviewScreen,\n    ProductDetail: ProductDetailScreen,\n    Cart: CartScreen\n  },\n  {\n    navigationOptions: {\n      drawerIcon: drawerConfig => (\n        <Ionicons\n          name={Platform.OS === 'android' ? 'md-cart' : 'ios-cart'}\n          size={23}\n          color={drawerConfig.tintColor}\n        />\n      )\n    },\n    defaultNavigationOptions: defaultNavOptions\n  }\n);\n\nconst OrdersNavigator = createStackNavigator(\n  {\n    Orders: OrdersScreen\n  },\n  {\n    navigationOptions: {\n      drawerIcon: drawerConfig => (\n        <Ionicons\n          name={Platform.OS === 'android' ? 'md-list' : 'ios-list'}\n          size={23}\n          color={drawerConfig.tintColor}\n        />\n      )\n    },\n    defaultNavigationOptions: defaultNavOptions\n  }\n);\n\nconst AdminNavigator = createStackNavigator(\n    {\n      UserProducts: UserProductsScreen,\n      EditProduct: EditProductScreen\n    },\n    {\n      navigationOptions: {\n        drawerIcon: drawerConfig => (\n          <Ionicons\n            name={Platform.OS === 'android' ? 'md-create' : 'ios-create'}\n            size={23}\n            color={drawerConfig.tintColor}\n          />\n        )\n      },\n      defaultNavigationOptions: defaultNavOptions\n    }\n  );\n\n  const ShopNavigator = createDrawerNavigator(\n    {\n      Products: ProductsNavigator,\n      Orders: OrdersNavigator,\n      Admin: AdminNavigator\n    },\n    {\n      contentOptions: {\n        activeTintColor: Colors.primary\n      },\n      contentComponent: props => {\n        const dispatch = useDispatch();\n        return (\n          <View style={{ flex: 1, paddingTop: 20 }}>\n            <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n              <DrawerNavigatorItems {...props} />\n              <Button\n                title=\"Logout\"\n                color={Colors.primary}\n                onPress={() => {\n                  dispatch(authActions.logout());\n                  // props.navigation.navigate('Auth');\n                }}\n              />\n            </SafeAreaView>\n          </View>\n        );\n      }\n    }\n  );\n\n\nconst AuthNavigator = createStackNavigator(\n  {\n    Auth: AuthScreen\n  },\n  {\n    defaultNavigationOptions: defaultNavOptions\n  }\n);\n\nconst MainNavigator = createSwitchNavigator({\n  Startup: StartupScreen,\n  Auth: AuthNavigator,\n  Shop: ShopNavigator\n});\n\nexport default createAppContainer(MainNavigator);\n\n"]},"metadata":{},"sourceType":"module"}
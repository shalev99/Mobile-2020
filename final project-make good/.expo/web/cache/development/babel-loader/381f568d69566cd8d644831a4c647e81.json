{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\romfa\\\\Desktop\\\\MakeGood\\\\src\\\\screens\\\\user\\\\EditProductScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useCallback, useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport * as productsActions from \"../../store/actions/products\";\nimport Input from \"../../components/UI/Input\";\nimport Colors from \"../../constants/Colors\";\nvar FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar EditProductScreen = function EditProductScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var prodId = props.navigation.getParam('productId');\n  var editedProduct = useSelector(function (state) {\n    return state.products.userProducts.find(function (prod) {\n      return prod.id === prodId;\n    });\n  });\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : '',\n      imageUrl: editedProduct ? editedProduct.imageUrl : '',\n      description: editedProduct ? editedProduct.description : '',\n      price: ''\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false\n    },\n    formIsValid: editedProduct ? true : false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert('התרחשה שגיאה.. אנא נסה שנית..', error, [{\n        text: 'המשך'\n      }]);\n    }\n  }, [error]);\n  var submitHandler = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (formState.formIsValid) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert('טעות בהזנת הנתונים!', 'אנא בדוק ש.', [{\n              text: 'Okay'\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            setError(null);\n            setIsLoading(true);\n            _context.prev = 5;\n\n            if (!editedProduct) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.updateProduct(prodId, formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl)));\n\n          case 9:\n            _context.next = 13;\n            break;\n\n          case 11:\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.createProduct(formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl, +formState.inputValues.price)));\n\n          case 13:\n            props.navigation.goBack();\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            setError(_context.t0.message);\n\n          case 19:\n            setIsLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 16]], Promise);\n  }, [dispatch, prodId, formState]);\n  useEffect(function () {\n    props.navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: \"padding\",\n    keyboardVerticalOffset: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    id: \"title\",\n    label: \"Title\",\n    errorText: \"Please enter a valid title!\",\n    keyboardType: \"default\",\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    initialValue: editedProduct ? editedProduct.title : '',\n    initiallyValid: !!editedProduct,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    id: \"imageUrl\",\n    label: \"Image Url\",\n    errorText: \"Please enter a valid image url!\",\n    keyboardType: \"default\",\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    initialValue: editedProduct ? editedProduct.imageUrl : '',\n    initiallyValid: !!editedProduct,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), editedProduct ? null : React.createElement(Input, {\n    id: \"price\",\n    label: \"Price\",\n    errorText: \"Please enter a valid price!\",\n    keyboardType: \"decimal-pad\",\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    required: true,\n    min: 0.1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    errorText: \"Please enter a valid description!\",\n    keyboardType: \"default\",\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    multiline: true,\n    numberOfLines: 3,\n    onInputChange: inputChangeHandler,\n    initialValue: editedProduct ? editedProduct.description : '',\n    initiallyValid: !!editedProduct,\n    required: true,\n    minLength: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }))));\n};\n\nEditProductScreen.navigationOptions = function (navData) {\n  var submitFn = navData.navigation.getParam('submit');\n  return {\n    headerTitle: navData.navigation.getParam('productId') ? 'Edit Product' : 'Add Product',\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Save\",\n        iconName: Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark',\n        onPress: submitFn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    margin: 20\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default EditProductScreen;","map":{"version":3,"sources":["C:/Users/romfa/Desktop/MakeGood/src/screens/user/EditProductScreen.js"],"names":["React","useState","useEffect","useCallback","useReducer","HeaderButtons","Item","useSelector","useDispatch","HeaderButton","productsActions","Input","Colors","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","EditProductScreen","props","isLoading","setIsLoading","error","setError","prodId","navigation","getParam","editedProduct","products","userProducts","find","prod","id","dispatch","title","imageUrl","description","price","formState","dispatchFormState","Alert","alert","text","submitHandler","updateProduct","createProduct","goBack","message","setParams","submit","inputChangeHandler","inputIdentifier","inputValue","inputValidity","styles","centered","primary","flex","form","navigationOptions","navData","submitFn","headerTitle","headerRight","Platform","OS","StyleSheet","create","margin","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useReducer } from 'react';\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  Platform,\n  Alert,\n  KeyboardAvoidingView,\n  ActivityIndicator\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport HeaderButton from '../../components/UI/HeaderButton';\nimport * as productsActions from '../../store/actions/products';\nimport Input from '../../components/UI/Input';\nimport Colors from '../../constants/Colors';\n\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n  return state;\n};\n\nconst EditProductScreen = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const prodId = props.navigation.getParam('productId');\n  const editedProduct = useSelector(state =>\n    state.products.userProducts.find(prod => prod.id === prodId)\n  );\n  const dispatch = useDispatch();\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : '',\n      imageUrl: editedProduct ? editedProduct.imageUrl : '',\n      description: editedProduct ? editedProduct.description : '',\n      price: ''\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false\n    },\n    formIsValid: editedProduct ? true : false\n  });\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert('התרחשה שגיאה.. אנא נסה שנית..', error, [{ text: 'המשך' }]);\n    }\n  }, [error]);\n\n  const submitHandler = useCallback(async () => {\n    if (!formState.formIsValid) {\n      Alert.alert('טעות בהזנת הנתונים!', 'אנא בדוק ש.', [\n        { text: 'Okay' }\n      ]);\n      return;\n    }\n    setError(null);\n    setIsLoading(true);\n    try {\n      if (editedProduct) {\n        await dispatch(\n          productsActions.updateProduct(\n            prodId,\n            formState.inputValues.title,\n            formState.inputValues.description,\n            formState.inputValues.imageUrl\n          )\n        );\n      } else {\n        await dispatch(\n          productsActions.createProduct(\n            formState.inputValues.title,\n            formState.inputValues.description,\n            formState.inputValues.imageUrl,\n            +formState.inputValues.price\n          )\n        );\n      }\n      props.navigation.goBack();\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n    \n  }, [dispatch, prodId, formState]);\n\n  useEffect(() => {\n    props.navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier\n      });\n    },\n    [dispatchFormState]\n  );\n\n  if (isLoading) {\n    return (\n      <View style={styles.centered}>\n        <ActivityIndicator size=\"large\" color={Colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={{ flex: 1 }}\n      behavior=\"padding\"\n      keyboardVerticalOffset={100}\n    >\n      <ScrollView>\n        <View style={styles.form}>\n          <Input\n            id=\"title\"\n            label=\"Title\"\n            errorText=\"Please enter a valid title!\"\n            keyboardType=\"default\"\n            autoCapitalize=\"sentences\"\n            autoCorrect\n            returnKeyType=\"next\"\n            onInputChange={inputChangeHandler}\n            initialValue={editedProduct ? editedProduct.title : ''}\n            initiallyValid={!!editedProduct}\n            required\n          />\n          <Input\n            id=\"imageUrl\"\n            label=\"Image Url\"\n            errorText=\"Please enter a valid image url!\"\n            keyboardType=\"default\"\n            returnKeyType=\"next\"\n            onInputChange={inputChangeHandler}\n            initialValue={editedProduct ? editedProduct.imageUrl : ''}\n            initiallyValid={!!editedProduct}\n            required\n          />\n          {editedProduct ? null : (\n            <Input\n              id=\"price\"\n              label=\"Price\"\n              errorText=\"Please enter a valid price!\"\n              keyboardType=\"decimal-pad\"\n              returnKeyType=\"next\"\n              onInputChange={inputChangeHandler}\n              required\n              min={0.1}\n            />\n          )}\n          <Input\n            id=\"description\"\n            label=\"Description\"\n            errorText=\"Please enter a valid description!\"\n            keyboardType=\"default\"\n            autoCapitalize=\"sentences\"\n            autoCorrect\n            multiline\n            numberOfLines={3}\n            onInputChange={inputChangeHandler}\n            initialValue={editedProduct ? editedProduct.description : ''}\n            initiallyValid={!!editedProduct}\n            required\n            minLength={5}\n          />\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nEditProductScreen.navigationOptions = navData => {\n  const submitFn = navData.navigation.getParam('submit');\n  return {\n    headerTitle: navData.navigation.getParam('productId')\n      ? 'Edit Product'\n      : 'Add Product',\n    headerRight: () => \n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Save\"\n          iconName={\n            Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark'\n          }\n          onPress={submitFn}\n        />\n      </HeaderButtons>\n  };\n};\n\nconst styles = StyleSheet.create({\n  form: {\n    margin: 20\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\romfa\\\\Desktop\\\\\\u200F\\u200F\\u200F\\u200F\\u200F\\u200FMakeGood - heb - 1\\\\src\\\\components\\\\UI\\\\Input.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar INPUT_CHANGE = 'INPUT_CHANGE';\nvar INPUT_BLUR = 'INPUT_BLUR';\n\nvar Input = function Input(props) {\n  var _useReducer = useReducer(inputReducer, {\n    value: props.initialValue ? props.initialValue : '',\n    isValid: props.initiallyValid,\n    touched: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      inputState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var onInputChange = props.onInputChange,\n      id = props.id;\n  useEffect(function () {\n    if (inputState.touched) {\n      onInputChange(id, inputState.value, inputState.isValid);\n    }\n  }, [inputState, onInputChange, id]);\n\n  var textChangeHandler = function textChangeHandler(text) {\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var isValid = true;\n\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n\n    dispatch({\n      type: INPUT_CHANGE,\n      value: text,\n      isValid: isValid\n    });\n  };\n\n  var lostFocusHandler = function lostFocusHandler() {\n    dispatch({\n      type: INPUT_BLUR\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, props.label), React.createElement(TextInput, _extends({}, props, {\n    style: styles.input,\n    value: inputState.value,\n    onChangeText: textChangeHandler,\n    onBlur: lostFocusHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })), !inputState.isValid && inputState.touched && React.createElement(View, {\n    style: styles.errorContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, props.errorText)));\n};\n\nvar styles = StyleSheet.create({\n  formControl: {\n    width: '100%'\n  },\n  label: {\n    fontWeight: 'bold',\n    marginVertical: 8\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1\n  },\n  errorContainer: {\n    marginVertical: 5\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 13\n  }\n});\nexport default Input;","map":{"version":3,"sources":["C:/Users/romfa/Desktop/‏‏‏‏‏‏MakeGood - heb - 1/src/components/UI/Input.js"],"names":["React","useReducer","useEffect","INPUT_CHANGE","INPUT_BLUR","Input","props","inputReducer","value","initialValue","isValid","initiallyValid","touched","inputState","dispatch","onInputChange","id","textChangeHandler","text","emailRegex","required","trim","length","email","test","toLowerCase","min","max","minLength","type","lostFocusHandler","styles","formControl","label","input","errorContainer","errorText","StyleSheet","create","width","fontWeight","marginVertical","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet } from 'react-native';\n\nconst INPUT_CHANGE = 'INPUT_CHANGE';\nconst INPUT_BLUR = 'INPUT_BLUR';\n\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue ? props.initialValue : '',\n    isValid: props.initiallyValid,\n    touched: false\n  });\n\n  const { onInputChange, id } = props;\n\n  useEffect(() => {\n    if (inputState.touched) {\n      onInputChange(id, inputState.value, inputState.isValid);\n    }\n  }, [inputState, onInputChange, id]);\n\n  const textChangeHandler = text => {\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let isValid = true;\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n    dispatch({ type: INPUT_CHANGE, value: text, isValid: isValid });\n  };\n\n  const lostFocusHandler = () => {\n    dispatch({ type: INPUT_BLUR });\n  };\n\n  return (\n    <View style={styles.formControl}>\n      <Text style={styles.label}>{props.label}</Text>\n      <TextInput\n        {...props}\n        style={styles.input}\n        value={inputState.value}\n        onChangeText={textChangeHandler}\n        onBlur={lostFocusHandler}\n      />\n      {!inputState.isValid && inputState.touched && (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>{props.errorText}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  formControl: {\n    width: '100%'\n  },\n  label: {\n    fontWeight: 'bold',\n    marginVertical: 8\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1\n  },\n  errorContainer: {\n    marginVertical: 5\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 13\n  }\n});\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}
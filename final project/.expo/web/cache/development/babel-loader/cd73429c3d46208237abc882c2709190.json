{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Volunteer from \"../../models/volunteer\";\nexport var DELETE_Volunteer = 'DELETE_Volunteer';\nexport var CREATE_Volunteer = 'CREATE_Volunteer';\nexport var UPDATE_Volunteer = 'UPDATE_Volunteer';\nexport var SET_VolunteerS = 'SET_VolunteerS';\nexport var fetchVolunteers = function fetchVolunteers() {\n  return function _callee(dispatch, getState) {\n    var userId, response, resData, loadedVolunteers, key;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = getState().auth.userId;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch('https://makegood-728b4.firebaseio.com/volunteers.json'));\n\n          case 4:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('Something went wrong!');\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            resData = _context.sent;\n            loadedVolunteers = [];\n\n            for (key in resData) {\n              loadedVolunteers.push(new Volunteer(key, resData[key].ownerId, resData[key].title, resData[key].imageUrl, resData[key].description, resData[key].location, resData[key].time));\n            }\n\n            dispatch({\n              type: SET_VolunteerS,\n              volunteers: loadedVolunteers,\n              userVolunteers: loadedVolunteers.filter(function (Vol) {\n                return prod.ownerId === userId;\n              })\n            });\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 15]], Promise);\n  };\n};\nexport var deleteVolunteer = function deleteVolunteer(volunteerId) {\n  return function _callee2(dispatch, getState) {\n    var token, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = getState().auth.token;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://makegood-728b4.firebaseio.com/volunteers/\" + volunteerId + \".json?auth=\" + token, {\n              method: 'DELETE'\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 6;\n              break;\n            }\n\n            throw new Error('Something went wrong!');\n\n          case 6:\n            dispatch({\n              type: DELETE_Volunteer,\n              pid: volunteerId\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var createVolunteer = function createVolunteer(title, description, imageUrl, location, time) {\n  return function _callee3(dispatch, getState) {\n    var token, userId, response, resData;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = getState().auth.token;\n            userId = getState().auth.userId;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://makegood-728b4.firebaseio.com/volunteers.json?auth=\" + token, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: title,\n                description: description,\n                imageUrl: imageUrl,\n                location: location,\n                time: time,\n                ownerId: userId\n              })\n            }));\n\n          case 4:\n            response = _context3.sent;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            resData = _context3.sent;\n            dispatch({\n              type: CREATE_Volunteer,\n              volunteerData: {\n                id: resData.name,\n                title: title,\n                description: description,\n                imageUrl: imageUrl,\n                location: location,\n                time: time,\n                ownerId: userId\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateVolunteer = function updateVolunteer(id, title, description, imageUrl, location, time) {\n  return function _callee4(dispatch, getState) {\n    var token, response;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            token = getState().auth.token;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://makegood-728b4.firebaseio.com/volunteers/\" + id + \".json?auth=\" + token, {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: title,\n                description: description,\n                imageUrl: imageUrl,\n                location: location,\n                time: time\n              })\n            }));\n\n          case 3:\n            response = _context4.sent;\n\n            if (response.ok) {\n              _context4.next = 6;\n              break;\n            }\n\n            throw new Error('Something went wrong!');\n\n          case 6:\n            dispatch({\n              type: UPDATE_Volunteer,\n              pid: id,\n              volunteerData: {\n                title: title,\n                description: description,\n                imageUrl: imageUrl,\n                location: location,\n                time: time\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/romfa/Desktop/‏‏‏‏‏‏MakeGood - heb - 1/src/store/actions/volunteers.js"],"names":["Volunteer","DELETE_Volunteer","CREATE_Volunteer","UPDATE_Volunteer","SET_VolunteerS","fetchVolunteers","dispatch","getState","userId","auth","fetch","response","ok","Error","json","resData","loadedVolunteers","key","push","ownerId","title","imageUrl","description","location","time","type","volunteers","userVolunteers","filter","Vol","prod","deleteVolunteer","volunteerId","token","method","pid","createVolunteer","headers","body","JSON","stringify","volunteerData","id","name","updateVolunteer"],"mappings":"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","sourcesContent":["import Volunteer from '../../models/volunteer';\n\nexport const DELETE_Volunteer = 'DELETE_Volunteer';\nexport const CREATE_Volunteer = 'CREATE_Volunteer';\nexport const UPDATE_Volunteer = 'UPDATE_Volunteer';\nexport const SET_VolunteerS = 'SET_VolunteerS';\n\nexport const fetchVolunteers = () => {\n  return async (dispatch, getState) => {    \n    const userId = getState().auth.userId;\n    try {\n      const response = await fetch(\n        'https://makegood-728b4.firebaseio.com/volunteers.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const resData = await response.json();\n      const loadedVolunteers = [];\n\n      for (const key in resData) {\n        loadedVolunteers.push(\n          new Volunteer(\n            key,\n            resData[key].ownerId,          \n            resData[key].title,\n            resData[key].imageUrl,\n            resData[key].description,\n            resData[key].location,\n            resData[key].time\n          )\n        );\n      }\n\n      dispatch({\n        type: SET_VolunteerS,\n        volunteers: loadedVolunteers,\n        userVolunteers: loadedVolunteers.filter(Vol => prod.ownerId === userId)\n      });\n    } catch (err) {\n      // send to custom analytics server\n      throw err;\n    }\n  };\n};\n\nexport const deleteVolunteer = volunteerId => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;\n    const response = await fetch(\n      `https://makegood-728b4.firebaseio.com/volunteers/${volunteerId}.json?auth=${token}`,\n      {\n        method: 'DELETE'\n      }\n    );\n    \n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n    dispatch({ type: DELETE_Volunteer, pid: volunteerId });\n  };\n};\n\n\nexport const createVolunteer = (title, description, imageUrl, location, time) => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;    \n    const userId = getState().auth.userId;\n    const response = await fetch(\n      `https://makegood-728b4.firebaseio.com/volunteers.json?auth=${token}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          imageUrl,\n          location,\n          time,\n          ownerId: userId\n        })\n      }\n    );\n\n    const resData = await response.json();\n\n    dispatch({\n      type: CREATE_Volunteer,\n      volunteerData: {\n        id: resData.name,\n        title,\n        description,\n        imageUrl,\n        location,\n        time,\n        ownerId: userId\n      }\n    });\n  };\n};\n\nexport const updateVolunteer = (id, title, description, imageUrl, location, time) => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;\n    const response = await fetch(\n      `https://makegood-728b4.firebaseio.com/volunteers/${id}.json?auth=${token}`,\n      {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          imageUrl,\n          location,\n          time\n        })\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    dispatch({\n      type: UPDATE_Volunteer,\n      pid: id,\n      volunteerData: {\n        title,\n        description,\n        imageUrl,\n        location,\n        time\n      }\n    });\n  };\n};"]},"metadata":{},"sourceType":"module"}